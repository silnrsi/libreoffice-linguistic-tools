# Cre 2/25/10 by Jim K

To update both branches, first push a commit to dev_extra,
then cherry pick the commit into the main branch.

Problem characters in XML
Find using Vim: Open as utf-8, then search for a range like /[\x90-\x95]
Also try opening in Firefox.
Note: In Vim /[\u0904-\u097f] also works.

The extension manager gives an error every time an extension is removed:
x/y/Addon.xcu could not be found.
To fix this, in the OOo user directory under uno_packages,
recreate the directories x and y and the file Addon.xcu.
A more complete solution:
    open command prompt
    chdir <path to registered_packages.db>
    python (need version 2.6 or later to handle DB hash version 9)
    import bsddb
    d = bsddb.hashopen("registered_packages.db") # Note: make sure you have write permission to the file.
    for k in d.keys():
        print k
    del d[d.keys()[0]]
    d.sync()
    d.close()

"Rejecting types due to incompatibility!"
With URE\bin\regview, I opened the .rdb file and noticed it seemed out of date.
So I ran make clean.
However make clean didn't seem to clean out the whole folder.
In particular it didn't seem to delete the .rdb file.
So I deleted the entire WINlingtools.out folder.
Then I opened the unorc file (\user\uno_packages\cache\registry\com.sun.star.comp.deployment.component.PackageRegistryBackend)
It was pointing to an old folder in uno_packages folder in the OOo user directory.
So I deleted that folder.
Then it worked!  The uno_packages folder seemed to be the problem.

Python class variables:
Putting a variable outside of init() is probably a bad idea for a macro.
The variable gets initialized when the script is loaded, which apparently
occurs if the script gets modified or probably when the document gets loaded,
but not every time the macro is executed.
So put variables inside init() instead, to be initialized every time.

When using a pythonpath subdirectory in an extension, each package must have
an __init__.py file.  Note that packages are not required.

PyChecker was giving a syntax error on line 30 for several files in the front
end.  It turns out that they were importing a file that had a syntax error
on line 30.
Recommendation: Run PyChecker on imported files first, before running it on
the front end.

For a BASIC variable to be persistent across calls, declare it Global.
Even global variables are reset when the BASIC code is modified.

To group radio buttons, the frame and group name are irrelevant.
Instead, it depends on the tab order.
The tab indexes must be sequential with nothing in between.
Then there must be a break in the tab order before starting another set of
radio buttons.

Importing a constant such as 
`from com.sun.star.beans.PropertyAttribute import REMOVEABLE`,
will raise ModuleNotFoundError unless uno is imported first.
It could be imported in the same module, but that makes code harder to read.
